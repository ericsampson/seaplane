on:
  push:
    branches: [main]
    paths:
      - '**.rs'
      - 'Cargo.lock'
      - 'share/**'
      - 'LICENSE'
      - '!**.md'
      - '!**.yml'
      - '!doc/**'
  workflow_dispatch:

name: Nightly Release

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-win-x64:
    uses: ./.github/workflows/workflow-build-release.yml
    with:
      runner: "['windows-latest']"
      target: x86_64-pc-windows-gnu
      use-short-sha: true

  build-mac-x64:
    uses: ./.github/workflows/workflow-build-release.yml
    with:
      runner: "['macos-latest']"
      target: x86_64-apple-darwin
      use-short-sha: true

  build-linux-x64-gnu:
    uses: ./.github/workflows/workflow-build-release.yml
    with:
      runner: "['self-hosted', 'linux', 'x64']"
      target: x86_64-unknown-linux-gnu
      use-short-sha: true

  build-linux-aarch64-gnu:
    uses: ./.github/workflows/workflow-build-release.yml
    with:
      runner: "['self-hosted', 'linux', 'arm64']"
      target: aarch64-unknown-linux-gnu
      use-short-sha: true

  release:
    name: Create Nightly Release
    runs-on: [self-hosted, linux, x64]
    container: ubuntu:focal
    needs:
      - build-win-x64
      - build-mac-x64
      - build-linux-x64-gnu
      - build-linux-aarch64-gnu
    steps:
      - name: Remove previous Nightly Release
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true
          tag_name: nightly
          repo: seaplane-io/seaplane
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - uses: benjlevesque/short-sha@v1.2
        id: short-sha

      - name: Download all workflow release artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts/

      - name: Create Nightly Release
        uses: softprops/action-gh-release@v1
        with:
          name: Seaplane CLI Nightly (${{ env.SHA }})
          tag_name: nightly
          prerelease: true
          files: artifacts/artifact/seaplane-*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: seaplane-io/seaplane
          SHA: ${{ steps.short-sha.outputs.sha }}
