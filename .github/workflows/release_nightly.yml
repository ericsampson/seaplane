on:
  push:
    branches: [main]
  workflow_dispatch:

name: Nightly Release

jobs:
  get_sha:
    runs-on: [self-hosted, linux, x64]
    container: ubuntu:focal
    steps:
      - uses: actions/checkout@v2
      - uses: benjlevesque/short-sha@v1.2
        id: short-sha

  build-win-x64:
    needs: get_sha
    uses: ./.github/workflows/workflow-build-release.yml
    with:
      runner: "['windows-latest']"
      target: x86_64-pc-windows-gnu
      bin-id: ${{ needs.jobs.get_sha.steps.short-sha.outputs.sha }}

  build-mac-x64:
    needs: get_sha
    uses: ./.github/workflows/workflow-build-release.yml
    with:
      runner: "['macos-latest']"
      target: x86_64-apple-darwin
      bin-id: ${{ needs.jobs.get_sha.steps.short-sha.outputs.sha }}

  # TODO: when M1 Runner is ready
  # build-mac-aarch64:
  #   needs: get_sha
  #   uses: ./.github/workflows/workflow-build-release.yml
  #   with:
  #     runner: "['ARM64', 'macOS']"
  #     target: aarch64-apple-darwin
  #     bin-id: ${{ needs.jobs.get_sha.steps.short-sha.outputs.sha }}

  build-linux-x64-gnu:
    needs: get_sha
    uses: ./.github/workflows/workflow-build-release.yml
    with:
      runner: "['self-hosted', 'linux', 'x64']"
      target: x86_64-unknown-linux-gnu
      bin-id: ${{ needs.jobs.get_sha.steps.short-sha.outputs.sha }}

  # build-linux-x64-musl:
  #   needs: get_sha
  #   uses: ./.github/workflows/workflow-build-release.yml
  #   with:
  #     runner: "['linux', 'x64']"
  #     target: x86_64-unknown-linux-musl
  #     bin-id: ${{ needs.jobs.get_sha.steps.short-sha.outputs.sha }}

  build-linux-aarch64-gnu:
    needs: get_sha
    uses: ./.github/workflows/workflow-build-release.yml
    with:
      runner: "['self-hosted', 'linux', 'arm64']"
      target: aarch64-unknown-linux-gnu
      bin-id: ${{ needs.jobs.get_sha.steps.short-sha.outputs.sha }}

  # build-linux-aarch64-musl:
  #   needs: get_sha
  #   uses: ./.github/workflows/workflow-build-release.yml
  #   with:
  #     runner: "['linux', 'arm64']"
  #     target: aarch64-unknown-linux-musl
  #     bin-id: ${{ needs.jobs.get_sha.steps.short-sha.outputs.sha }}

  release:
    name: Create Nightly Release
    runs-on: [self-hosted, linux, x64]
    container: ubuntu:focal
    needs:
      - get_sha
      - build-win-x64
      - build-mac-x64
      - build-linux-x64-gnu
      - build-linux-aarch64-gnu
        #- build-mac-aarch64
        #- build-linux-x64-musl
        #- build-linux-aarch64-musl
    steps:
      - name: Remove previous Nightly Release
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true
          tag_name: nightly
          repo: seaplane-io/seaplane
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Download all workflow release artifacts
        uses: actions/download-artifact@v3

      - name: Create Nightly Release
        uses: softprops/action-gh-release@v1
        with:
          name: Seaplane CLI Nightly (${{ needs.jobs.get_sha.steps.short-sha.outputs.sha }})
          tag_name: nightly
          prerelease: true
          body_path: nightly-CHANGELOG.md
          files: |
            seaplane-${{ needs.jobs.get_sha.steps.short-sha.outputs.sha }}-x86_64-unknown-linux-gnu.tar.gz
            seaplane-${{ needs.jobs.get_sha.steps.short-sha.outputs.sha }}-aarch64-unknown-linux-gnu.tar.gz
            seaplane-${{ needs.jobs.get_sha.steps.short-sha.outputs.sha }}-x86_64-pc-windows-gnu.tar.gz
            seaplane-${{ needs.jobs.get_sha.steps.short-sha.outputs.sha }}-x86_64-apple-darwin.tar.gz
            # seaplane-${{ needs.jobs.get_sha.steps.short-sha.outputs.sha }}-aarch64-apple-darwin.tar.gz
            # seaplane-${{ needs.jobs.get_sha.steps.short-sha.outputs.sha }}-x86_64-unknown-linux-musl.tar.gz
            # seaplane-${{ needs.jobs.get_sha.steps.short-sha.outputs.sha }}-aarch64-unknown-linux-musl.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: seaplane-io/seaplane
