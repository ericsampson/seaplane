name: Release Workflow

on:
  workflow_call:
    inputs:
      # Target Runner (defaults to our self hosted X64 Linux runners)
      # As a JSON array
      runner:
        type: string
        default: X64
        required: false
      # use the short sha as the binary version ID for the archive
      use-short-sha:
        type: boolean
        default: false
      # use the latest tag as the binary version ID for the archive
      use-tag-version:
        type: boolean
        default: false

env:
  CARGO_TERM_COLOR: always

jobs:
  build-release:
    name: Build Release
    runs-on: ${{ fromJSON(inputs.runner) }}
    steps:
      - name: Install OpenSSL Headers (Linux)
        if: ${{ !contains(inputs.runner, 'self-hosted') && contains(inputs.runner, 'linux') }}
        run: |
          apt-get update
          apt-get install -y libssl-dev pkg-config

      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: Install Windows Tools
        if: ${{ contains(inputs.runner, 'windows-latest') }}
        run: choco install -y zip just

      - name: Install Just
        shell: bash
        if: ${{ !contains(inputs.runner, 'windows-latest') }}
        run: |
          if ! command -v just 2>/dev/null ; then
            cargo install just --force
          fi

      - name: Package Release
        if: inputs.use-tag-version
        run: just package-release

      - name: Package Nightly Release
        if: inputs.use-short-sha
        run: just package-nightly

      - name: Save Artifacts Archive
        if: ${{ !contains(inputs.runner, 'windows-latest') }}
        uses: actions/upload-artifact@v3
        with:
          path: seaplane-*.tar.gz
          if-no-files-found: error

      - name: Save Artifacts Archive
        if: contains(inputs.runner, 'windows-latest')
        uses: actions/upload-artifact@v3
        with:
          path: seaplane-*.zip
          if-no-files-found: error
