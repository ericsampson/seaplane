# CI workflow for every merge to main.
#
# This workflow may also be triggered manually for testing purposes.
name: "Run rust tests"

on:
  workflow_call:
    inputs:
      test_sdk:
        type: boolean
        required: false
        default: true
      test_cli:
          type: boolean
          required: false
          default: true

  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    name: Formatting, clippy, and docs check
    runs-on: [self-hosted, linux, x64, lxc]
    steps:
    - name: Check out the repo
      uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        components: rustfmt, clippy

    - uses: Swatinem/rust-cache@v1

    - name: Check SDK formatting for the SDK
      run: cargo fmt --all --manifest-path ./seaplane-sdk/rust/Cargo.toml  -- --check
      if: ${{ inputs.test_sdk }}
    - name: Lint the rust SDK
      run: cargo clippy --manifest-path ./seaplane-sdk/rust/Cargo.toml --all-targets --features default,unstable -- -D warnings
      if: ${{ inputs.test_sdk }}
    - name: Check SDK documentation
      env:
        RUSTDOCFLAGS: -D warnings
      run: cargo doc --manifest-path ./seaplane-sdk/rust/Cargo.toml  --all-features --no-deps --document-private-items
      if: ${{ inputs.test_sdk }}

    - name: Check CLI formatting
      run: cargo fmt --all --manifest-path ./seaplane-cli/Cargo.toml  -- --check
      if: ${{ inputs.test_cli }}
    - name: Lint the CLI
      run: cargo clippy --manifest-path ./seaplane-cli/Cargo.toml --all-targets --features default,unstable -- -D warnings
      if: ${{ inputs.test_cli }}
    - name: Check documentation for the rust CLI
      env:
        RUSTDOCFLAGS: -D warnings
      run: cargo doc --manifest-path ./seaplane-cli/Cargo.toml  --all-features --no-deps --document-private-items
      if: ${{ inputs.test_cli }}

    - name: Spell-check the entire repo
      uses: crate-ci/typos@master

  test-linux:
    name: Run CLI tests on Linux
    strategy:
      matrix:
        arch: [ "ARM64", "X64" ]
    runs-on:
      - self-hosted
      - linux
      - ${{matrix.arch}}
      - lxc
    steps:
    - name: Check out the repo
      uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal

    - uses: Swatinem/rust-cache@v1

    # We don't do this as a matrix to avoid the overhead of starting up a test run.
    # Plus we get more out of our cache this way.

    - name: Test the SDK, default features
      run: cargo test --manifest-path ./seaplane-sdk/rust/Cargo.toml
      if: ${{ inputs.test_sdk }}
    - name: Test the SDK, no default features
      run: cargo test --no-default-features --manifest-path ./seaplane-sdk/rust/Cargo.toml
      if: ${{ inputs.test_sdk }}
    - name: Test the SDK, unstable features
      run: cargo test --features unstable --manifest-path ./seaplane-sdk/rust/Cargo.toml
      if: ${{ inputs.test_sdk }}

    - name: Test the CLI, default features
      run: cargo test --manifest-path ./seaplane-cli/Cargo.toml
      if: ${{ inputs.test_cli }}
    - name: Test the CLI, no default features
      run: cargo test --no-default-features --manifest-path ./seaplane-cli/Cargo.toml
      if: ${{ inputs.test_cli }}
    - name: Test the CLI, unstable features
      run: cargo test --features unstable --manifest-path ./seaplane-cli/Cargo.toml
      if: ${{ inputs.test_cli }}
    - name: Run the CLI UI tests
      run: cargo test --features ui_tests --manifest-path ./seaplane-cli/Cargo.toml
      if: ${{ inputs.test_cli }}

    - name: SDK Mock API tests
      run: cargo test --features api_tests --manifest-path ./seaplane-sdk/rust/Cargo.toml -- --test-threads=1
      if: ${{ inputs.test_sdk }}
    - name: SDK Mock API tests, unstable features
      run: cargo test --features api_tests,unstable --manifest-path ./seaplane-sdk/rust/Cargo.toml -- --test-threads=1
      if: ${{ inputs.test_sdk }}
    - name: CLI Mock API tests
      run: cargo test --features api_tests --manifest-path ./seaplane-cli/Cargo.toml -- --test-threads=1
      if: ${{ inputs.test_cli }}
    - name: CLI Mock API tests, unstable features
      run: cargo test --features api_tests,unstable --manifest-path ./seaplane-cli/Cargo.toml -- --test-threads=1
      if: ${{ inputs.test_cli }}

  test-win-macos-x64:
    name: Test on Intel Mac and Windows
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Check out the repo
      uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal

    - uses: Swatinem/rust-cache@v1

    - name: Test the SDK, default features
      run: cargo test --manifest-path ./seaplane-sdk/rust/Cargo.toml
      if: ${{ inputs.test_sdk }}
    - name: Test the SDK, no default features
      run: cargo test --no-default-features --manifest-path ./seaplane-sdk/rust/Cargo.toml
      if: ${{ inputs.test_sdk }}
    - name: Test the SDK, unstable features
      run: cargo test --features unstable --manifest-path ./seaplane-sdk/rust/Cargo.toml
      if: ${{ inputs.test_sdk }}

    - name: Test the CLI, default features
      run: cargo test --manifest-path ./seaplane-cli/Cargo.toml
      if: ${{ inputs.test_cli }}
    - name: Test the CLI, no default features
      run: cargo test --no-default-features --manifest-path ./seaplane-cli/Cargo.toml
      if: ${{ inputs.test_cli }}
    - name: Test the CLI, unstable features
      run: cargo test --features unstable --manifest-path ./seaplane-cli/Cargo.toml
      if: ${{ inputs.test_cli }}
    - name: Run the CLI UI tests
      run: cargo test --features ui_tests --manifest-path ./seaplane-cli/Cargo.toml
      # UI testing library deadlocks on Windows if the application writes more than 4096 bytes
      # https://github.com/assert-rs/trycmd/issues/121
      # Once above issue is closed we can remove the `matrix.os` condition
      if: matrix.os != 'windows-latest' && inputs.test_cli

    - name: SDK Mock API tests
      run: cargo test --features api_tests --manifest-path ./seaplane-sdk/rust/Cargo.toml -- --test-threads=1
      if: ${{ inputs.test_sdk }}
    - name: SDK Mock API tests, unstable features
      run: cargo test --features api_tests,unstable --manifest-path ./seaplane-sdk/rust/Cargo.toml -- --test-threads=1
      if: ${{ inputs.test_sdk }}
    - name: CLI Mock API tests
      run: cargo test --features api_tests --manifest-path ./seaplane-cli/Cargo.toml -- --test-threads=1
      if: ${{ inputs.test_cli }}
    - name: CLI Mock API tests, unstable features
      run: cargo test --features api_tests,unstable --manifest-path ./seaplane-cli/Cargo.toml -- --test-threads=1
      if: ${{ inputs.test_cli }}
